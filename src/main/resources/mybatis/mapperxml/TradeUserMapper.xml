<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trade.tiger.mapper.TradeUserMapper">
  <resultMap id="BaseResultMap" type="com.trade.tiger.domain.TradeUser">
    <!--@mbg.generated-->
    <!--@Table trade_user-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="cookie" jdbcType="VARCHAR" property="cookie" />
    <result column="validate_key" jdbcType="VARCHAR" property="validateKey" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="trade_type" jdbcType="INTEGER" property="tradeType" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, account_id, cookie, validate_key, `state`, create_time, update_time, 
    user_id, trade_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from trade_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from trade_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.trade.tiger.domain.TradeUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into trade_user (`name`, account_id, cookie, 
      validate_key, `state`, create_time, 
      update_time, user_id, trade_type
      )
    values (#{name,jdbcType=VARCHAR}, #{accountId,jdbcType=VARCHAR}, #{cookie,jdbcType=VARCHAR}, 
      #{validateKey,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, #{tradeType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.trade.tiger.domain.TradeUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into trade_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="cookie != null">
        cookie,
      </if>
      <if test="validateKey != null">
        validate_key,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="tradeType != null">
        trade_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="cookie != null">
        #{cookie,jdbcType=VARCHAR},
      </if>
      <if test="validateKey != null">
        #{validateKey,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="tradeType != null">
        #{tradeType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trade.tiger.domain.TradeUser">
    <!--@mbg.generated-->
    update trade_user
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="cookie != null">
        cookie = #{cookie,jdbcType=VARCHAR},
      </if>
      <if test="validateKey != null">
        validate_key = #{validateKey,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="tradeType != null">
        trade_type = #{tradeType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trade.tiger.domain.TradeUser">
    <!--@mbg.generated-->
    update trade_user
    set `name` = #{name,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=VARCHAR},
      cookie = #{cookie,jdbcType=VARCHAR},
      validate_key = #{validateKey,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      trade_type = #{tradeType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update trade_user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.name != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.name,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="account_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.accountId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.accountId,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="cookie = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.cookie != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.cookie,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="validate_key = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.validateKey != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.validateKey,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="`state` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.state != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.state,jdbcType=TINYINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.userId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.userId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="trade_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.tradeType != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.tradeType,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.trade.tiger.domain.TradeUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into trade_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      `name`,
      account_id,
      cookie,
      validate_key,
      `state`,
      create_time,
      update_time,
      user_id,
      trade_type,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{name,jdbcType=VARCHAR},
      #{accountId,jdbcType=VARCHAR},
      #{cookie,jdbcType=VARCHAR},
      #{validateKey,jdbcType=VARCHAR},
      #{state,jdbcType=TINYINT},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
      #{userId,jdbcType=INTEGER},
      #{tradeType,jdbcType=INTEGER},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      `name` = #{name,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=VARCHAR},
      cookie = #{cookie,jdbcType=VARCHAR},
      validate_key = #{validateKey,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      trade_type = #{tradeType,jdbcType=INTEGER},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.trade.tiger.domain.TradeUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into trade_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="cookie != null">
        cookie,
      </if>
      <if test="validateKey != null">
        validate_key,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="tradeType != null">
        trade_type,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="cookie != null">
        #{cookie,jdbcType=VARCHAR},
      </if>
      <if test="validateKey != null">
        #{validateKey,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="tradeType != null">
        #{tradeType,jdbcType=INTEGER},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="cookie != null">
        cookie = #{cookie,jdbcType=VARCHAR},
      </if>
      <if test="validateKey != null">
        validate_key = #{validateKey,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="tradeType != null">
        trade_type = #{tradeType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
</mapper>